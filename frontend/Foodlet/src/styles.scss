// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming

@use '@angular/material' as mat;
@use "material-theme-creator/ngx-mtc" as ngx-mtc;

@import "src/assets/externalColorConstants";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@include ngx-mtc.init();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

/** Defaults */
/*
$Foodlet-primary: mat.define-palette(mat.$indigo-palette);
$Foodlet-accent: mat.define-palette(mat.$light-blue-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Foodlet-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".

$Foodlet-theme: mat.define-light-theme((
  color: (
    primary: $Foodlet-primary,
    accent: $Foodlet-accent,
    warn: $Foodlet-warn,
  ),

  $primary-palette: mat.define-palette($primary-map);
$accent-palette: mat.define-palette($accent-map);
$warn-palette: mat.define-palette($warn-map);
));
 */

$primary-map: ngx-mtc.create-theme-map('primary');
$accent-map: ngx-mtc.create-theme-map('accent');
$warn-map: ngx-mtc.create-theme-map('warn');


:root {
  --is-dark-theme: 0; // Is dark theme? 1 or 0;
  @include ngx-mtc.theme-base(); // Creates base colors

  // Creates theme colors
  @include ngx-mtc.create-variables-from-color('primary', $primary-colour, 38%); // can update
  @include ngx-mtc.create-variables-from-color('accent', $accent-colour, 57%); // can update
  @include ngx-mtc.create-variables-from-map('warn', mat.$red-palette); // can not update this theme

}

$primary-palette: mat.define-palette($primary-map);
$accent-palette: mat.define-palette($accent-map);
$warn-palette: mat.define-palette($warn-map);


$my-primary: mat.define-palette($primary-map);
$my-accent: mat.define-palette($accent-map);

$my-theme: mat.define-light-theme((
  color: (
    primary: $my-primary,
    accent: $my-accent,
  ),
  density: 0,
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);



// Custom theme
//$theme: ngx-mtc.custom-theme($primary-palette, $accent-palette, $warn-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((
  color: (
    primary: $primary-palette,
    accent: $accent-palette,
    warn: $warn-palette,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));


// Creates Angular Material Theme
@include mat.all-component-themes($theme);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($Foodlet-theme);


//Global styles

.mat-icon {
  vertical-align: -6px;
}

.recipe-view-dialog {
  width: 70%;
  max-width: 90%;
  max-height: 90%;
  font-family: Helvetica, sans-serif;
  border: solid 4px $primary-colour;
  border-radius: 10px;
  background-color: $background-colour-light;
}


body {
  margin: 0;
  font-family: Roboto, sans-serif;
  background-color: $background-colour-light;
}


::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 5px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}
